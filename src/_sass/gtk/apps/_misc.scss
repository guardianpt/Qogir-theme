
//
// Nemo
//
.nemo-desktop.nemo-canvas-item { @extend .nautilus-desktop.nautilus-canvas-item; }

.nemo-window {

  .nemo-places-sidebar {
    &.frame { border-width: 0; }
    .places-treeview {
      @extend row.activatable;
    }
  }

  notebook {
    background-color: $base_color;
    .primary-toolbar {
      background-color: $bg_color;

      button,
      combobox > .linked > button.combo {
        @include button(normal);
        &:hover {
          @include button(hover);
          -gtk-icon-effect: highlight;
        }
        &:active, &:checked {
          @include button(active);
          &:not(:disabled) label:disabled { color: inherit; opacity: 0.6; }
        }
        &:disabled {
          @include button(insensitive);
          &:active, &:checked {
            @include button(insensitive-active);
          }
        }
      }

      entry {
        min-height: 24px;
        min-width: 24px;
        @include entry(normal);
        &:focus { @include entry(focus); }
      }
    }
  }

  // Rename entry
  .nemo-window-pane widget.entry {
    border: 1px solid;
    border-radius: 3px;

    @include entry(focus);

    &:selected { &:focus, & { @extend %selected_items; } }
  }

  .primary-toolbar {
    padding-top: 0;
    padding-bottom: 0;
    @extend %header_widgets;
    border: none;
    color: $header_fg;
    background-color: opacify($header_bg, 1);
    box-shadow: inset 0 -1px $borders_color;

    button, entry {
      min-height: 16px;
      margin-top: 6px;
      margin-bottom: 6px;
    }
  }

  // Pathbar
  .primary-toolbar .linked:not(.vertical):not(.stack-switcher).path-bar,
  .primary-toolbar widget.linked.raised:not(.vertical):not(.path-bar) {
    button {
      color: $header_fg;
      background-color: transparent;
      border: none;
      margin-top: 4px;
      margin-bottom: 4px;

      &:hover {
        color: $alt_header_fg;
        border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                      rgba($selected_bg_color, 0.5) 100%,
                                      transparent 0%)
                                      0 0 2 / 0 0 2px;
      }
      &:active, &:checked {
        border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                      $selected_bg_color 100%,
                                      transparent 0%)
                                      0 0 2 / 0 0 2px;
      }
      &:disabled { color: rgba($header_fg, 0.5); }
      &, &:hover, &:active, &:checked, &:disabled { border-radius: 0; }
    }
  }
}

//
// Caja
//
.caja-desktop { @extend .nautilus-desktop.nautilus-canvas-item; }

.caja-notebook { border-top: 1px solid $borders_color; }
.caja-side-pane .frame { border-width: 1px 0 0; }
.caja-notebook .frame { border-width: 0 0 1px; }

.caja {
  &-canvas-item { @extend .nautilus-canvas-item; }

  &-list-dim-label { @extend .nautilus-list-dim-label; }
}

.caja-desktop { // desktop icon-grid styling
  &.caja-canvas-item { @extend .nautilus-desktop.nautilus-canvas-item; }

  > widget.entry { // = EelEditableLabel.entry
    &, &:focus {
      transition: none;

      &:selected { // FIXME: selection node doesn't work?
        @extend %selected_items;
      }
    }
  }
}

//
// Pluma
//

.pluma-window statusbar frame > border { border: none; }

.pluma-window notebook > stack scrolledwindow { border-width: 0 0 1px 0; }

#pluma-status-combo-button {
  min-height: 0;
  padding: 0;

  border-top: none;
  border-bottom: none;
  border-radius: 0;
}

//
// Xfce4
//

$text_shadow: 0 0 1px rgba(0, 0, 0, 0.26),
              0 1px 2px rgba(0, 0, 0, 0.32),
              0 2px 3px rgba(0, 0, 0, 0.12);

%panelbutton {
  color: $panel_fg;
  border-radius: 0;
  border: none;
  background-color: transparent;

  &:hover:not(:active):not(:checked) {
    color: $selected_fg_color;
    box-shadow: inset 0 -2px rgba($selected_bg_color, 0.5);
  }
  &:checked {
    color: $selected_fg_color;
    box-shadow: inset 0 -2px $selected_bg_color;
    label, image { color: inherit; }
  }
  &:active {
    background-color: rgba($selected_fg_color, 0.12);
    color: $selected_fg_color;
    box-shadow: inset 0 -2px $selected_bg_color;
  }
}

.xfce4-panel.panel {
  background-color: $panel_bg;
  text-shadow: none;
  -gtk-icon-shadow: none;
  border: none;
}

.XfceHeading {
  border: 0 none transparent;
  background-color: $bg_color;
  color: $fg_color;
}

.xfce4-panel {
  background-color: $panel_bg;
  color: $panel_fg;
  font-weight: 700;
  text-shadow: none;
  -gtk-icon-shadow: none;

  &, // unset borders
  frame > border { border: none; }

  &#XfcePanelWindow { // main panel container >= 4.13.3?
    // FIXME: unneeded 1px borders are reserved by its code itself
    border: none;

    &, &.marching-ants { transition: none; } // unset transitions
  }

  button.flat { @extend %panelbutton; }

  button {
    font-weight: 700;
    @extend %panelbutton;

    &#launcher-arrow { // launcher applet
      // FIXME: quite weird pseudo-classe transitions, especially :hover
      // state can't be cleared properly ( -> an upstream issue)
      &, + button.toggle {
        &:hover { box-shadow: none; } // hide indicators
      }

      + button.toggle:checked { // 'arrow' toggle button
        color: $selected_bg_color;
        box-shadow: none;
      }
    }

    &#xfce4-notification-plugin {
      padding: 0 1px; // for 4.12.2
    }
  }

  menu {
    font-weight: 400; // for enforcing regular weight
    text-shadow: none;
    -gtk-icon-effect: none;
  }

  widget.tasklist > button.toggle { font-weight: 400; }
}

XfdesktopIconView.view {
  border-radius: 2px;
  background: transparent;
  color: $selected_fg_color;
  text-shadow: $text_shadow;

  &:active, &:checked {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
    text-shadow: none;
  }

  .rubberband { @extend rubberband; }
}

window#whiskermenu-window {
  background-color: $base_color;

  // no CSD class even if the sw compositor was enabled.
  > frame > border {
    border-radius: 0;
  }

  scrolledwindow {
    > viewport button.radio {
      &:hover { background-color: if($variant == 'light', rgba(black, 0.12), rgba(white, 0.12)); }
      &:checked, &:active {
        background-color: $selected_bg_color;
        color: $selected_fg_color;
      }
    }

    treeview.view {
      &:selected:hover {
        background-color: if($variant == 'light', rgba(black, 0.1), rgba(white, 0.1));
        color: $fg_color;
      }
    }
  }
}


//
//  * Thunar *
//

%header_pathbar_button {
  border-radius: 0;
  background-color: transparent;
  border: none;
  color: $header_fg;
  border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                $selected_bg_color 0%,
                                transparent 0%)
                                0 0 0 / 0 0 0;
  &:hover {
    color: $alt_header_fg;
    background: none;
    box-shadow: inset 0 -2px rgba($selected_bg_color, 0.5);
  }
  &:active, &:checked {
    color: $header_fg;
    background: none;
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  $selected_bg_color 100%,
                                  transparent 0%)
                                  0 0 2 / 0 0 2px;
  }
  &:disabled { color: rgba($header_fg, 0.4); }
  &:checked:disabled {
    color: rgba($header_fg, 0.4);
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  rgba($selected_bg_color, 0.4) 100%,
                                  transparent 0%)
                                  0 0 2 / 0 0 2px;
  }
}

window.thunar {

  .sidebar treeview.view {
    @extend treeview.view;
    background-color: $dark_sidebar_bg;
    color: $dark_sidebar_fg;
  }

  notebook {
    // hide unneeded border
    stack > scrolledwindow.frame.standard-view {
      border-top-width: 0;
      border-right-width: 0;
    }

    // an allocation height of label node affects to close button's
    // image height (it's quite weird).
    header.top tab.reorderable-page > box > label { min-height: 0; }
  }

  toolbar#location-toolbar {
    background-color: $header_bg;
    color: $header_fg;
    box-shadow: inset 0 -1px $borders_color;

    button { @extend %header_button; }

    entry { @extend %header_entry; }

    .linked:not(.vertical):not(.stack-switcher).path-bar {
      button {
        margin: 0;
        padding: 4px;
        @extend %header_pathbar_button;
      }
    }
  }
}

//
// Elementary Apps
//

// Wingpanel

.panel {
  background-color: $panel_bg;
  transition: all 100ms ease-in-out;
  color: $panel_fg;
  font-weight: bold;
//  text-shadow: none;
//  -gtk-icon-shadow: none;

  &.maximized {
    background-color: rgba(black, 1);
  }

  &.translucent {
    background-color: $panel_bg;
//    box-shadow: none;
  }

  menubar &,
  & menubar {
    padding-top: 2px;
    padding-bottom: 2px;
    box-shadow: none;
    border: none;
    background: none;
    color: $panel_fg;
  }

  &-shadow {
    background-image: none;
    background-color: transparent;
  }

  .menu {
    box-shadow: none;

    .menuitem {
      font-weight: normal;
//      text-shadow: none;
//      -gtk-icon-shadow: none;
    }

    .window-frame.menu.csd,
    .window-frame.popup.csd {
//      box-shadow: none;
    }
  }

  .menubar > .menuitem {
    padding: 3px 6px;
    &:hover { background-color: transparent; }
  }

//  .window-frame.menu.csd,
//  .window-frame.popup.csd { box-shadow: none; }

  popover {
    padding: 2px 4px;
    font-weight: normal;
    border: 1px solid if($variant == 'light', rgba(black, 0.25), rgba(white, 0.12));
    box-shadow: 0 2px 3px rgba(black, 0.12), 0 3px 6px rgba(black, 0.08);

    button {
//      box-shadow: none;
//      text-shadow: none;
      font-weight: normal;
      border-color: transparent;
      background-color: transparent;

      &:hover { border-color: $borders_color; }
      &:active, &:checked {
        border-color: $sec_selected_bg_color;
        label { color: white; }
      }
    }

    .linked > button {
      border-color: $borders_color;
    }

    list { background-color: transparent; }

    separator.horizontal {
      margin: 0 -4px;
    }

    separator.vertical {
      background-image: image($borders_color);
      margin: 0 2px;
    }

    .sidebar {
      border-style: none;
      background: none;

      .view {
        background: none;
        border-radius: 2px;
        @extend row.activatable;

        &:selected,
        &:active,
        &:checked,
        &:active:backdrop,
        &:checked:backdrop,
        &:selected:backdrop {
          color: $selected_fg_color;
          background-color: $selected_bg_color;
        }
      }
    }
  }
}

// Popover switcher dots
button.flat.toggle.switcher {
  &:hover, &:active, &:checked, &:selected {
    image {
      color: $selected_bg_color;
    }
  }
}

// Calendar Popover
.circular { // Calendar popover date button
  label:disabled { color: $insensitive_fg_color; }
  &.accent { // Today button
    color: $selected_fg_color;
    background-color: $selected_bg_color;
  }
}

.panel-app-button > GtkWidget > GtkWidget:first-child {
  padding: 0 2px 0 4px;
}

.panel .menu .spinner,
.menu .spinner { opacity: 1; } // Fixes sound indicator buttons

.composited-indicator {
  background-color: transparent;
  color: $panel_fg;
//  text-shadow: none;
//  -gtk-icon-shadow: none;
  padding: 0 6px;

  > revealer label,
  > revealer image,
  > revealer spinner {
    color: $panel_fg;
    font-weight: bold;
    text-shadow: none;
    transition: all 200ms ease-in-out;
//    -gtk-icon-shadow: none;
  }

  .keyboard {
    background-color: #fff;
    border-radius: 2px;
    box-shadow: none;
    color: #333;
    font-weight: 600;
    padding: 0 3px;
    text-shadow: none;
  }

  > GtkWidget > GtkWidget:first-child { padding: 0 2px; }

  .menuitem:active, .menuitem:hover {
    border-style: none;
//    background-image: none;
//    box-shadow: none;
  }

  > .popup > .menu {
    padding-top: 8px;
    padding-bottom: 8px;
  }
}

// Birdie
BirdieWidgetsTweetList * {
  background-image: none;
  background-color: transparent;
}


// Marlin / Pantheon Files
MarlinViewWindow {

  *:selected, *:selected:focus {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    outline-color: transparent;
  }
  GtkIconView.view:selected {
    &, &:focus, &:hover, &:focus:hover { background-color: transparent; }
  }
  FMListView, FMColumnView { outline-color: transparent; }
}

.marlin-pathbar.pathbar {
  border-radius: 3px;
  padding-left: 4px;
  padding-right: 4px;

  @include entry(header-normal);

  &:focus { @include entry(header-focus) }

  &:disabled { @include entry(header-insensitive) }

  &:active, &:checked {
    color: $selected_bg_color;
  }
}

treeview.view {

  &.sidebar {
    color: $dark_sidebar_fg;
    background-color: $dark_sidebar_bg;

    &.source-list {
      padding-top: 3px;
      padding-bottom: 3px;
      @extend row.activatable;

      &.trough { @extend treeview.view.trough }
    }
  }
}

.dynamic-notebook {
  notebook {
    iconview.view.cell {
      &:selected { background-color: if($variant == 'light', rgba(black, 0.1), rgba(white, 0.08)); }
    }
  }
}

headerbar.titlebar {

  entry.pathbar {
    min-height: 0;
  }

  button.flat.image-button.toggle {
    min-height: 0;
    padding-top: 0;
    padding-bottom: 0;
    margin-top: 9px;
    margin-bottom: 10px;
  }

  > grid.linked.horizontal.format-bar {
    background-image: image($header_bg); // Hide Code header format-bar
  }
}

// Code
popover {
  radiobutton {
    &.color-button {
      &.color-light, &.color-dark, &.color-white {
        border: 1px solid $borders_color;
      }
    }
  }
}

// Gala
.gala-notification {
    border: 1px solid rgba(0, 0, 0, 0.35);
    border-radius: 3px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    background-image: _solid(white);
    background-color: transparent;

  .title, .label {
    color: #5c616c;
  }
}

// system setting
actionbar.inline-toolbar {
  border: none;
  border-top: 1px solid $borders_color;

//  button + button {
//    margin-left: -6px;
//  }

  button { // Reset buttons
    border-radius: 3px;
    border: 1px solid $borders_color;
    &:first-child {
      border-right-style: solid;
    }
    &:last-child {
      border-left-style: solid;
    }
  }
}

// Nightlight warmth trough
scale.warmth trough {
  background-image: linear-gradient(to right, $suggested_color, $destructive_color);
  box-shadow: inset 0 0 0 1px rgba($borders_color, 0.25);
}

//
// * Firefox and Thunderbird *
//

$firefox_border: if($variant == 'light', darken($button_bg, 15%), lighten($button_bg, 15%));

window.background:not(.csd) {
  > widget {
    // for the bookmark toolbar's separators
    > separator { color: $borders_color; }

    // avoid black border
    > scrollbar { background-clip: border-box; }

    // emphasize borders color
    > scrollbar,
    > frame > border { border-color: $borders_color; }

    > entry,
    > button > button {
      border: 1px solid $borders_color;
      border-radius: 2px;
    }

    > entry,
    .entry { // Set for linked entrys
//      min-height: 26px;
      border-radius: 2px;
      background-image: image($base_color);
      border: 1px solid $borders_color;

      &:focus { border-color: $selected_bg_color; }
    }

    > spinbutton {
      background-image: image($button_bg);
      border: 1px solid $borders_color;
      &:active { background-image: image(if($variant == 'light', darken($button_bg, 5%), lighten($button_bg, 5%))); }

      // Fixed thunderbird linked entry spinbutton border-radius.
      .entry { border-top-right-radius: 0;  border-bottom-right-radius: 0; }
    }

    > button > button {
      &:active, &:checked {
        border: 1px solid $firefox_border;
        background-image: image(if($variant == 'light', darken($button_bg, 5%), lighten($button_bg, 5%)));
      }
    }
  }

  .menu { // context-menus
    border-radius: 0;
    border: none;
  }

  > menu > separator { color: $borders_color; }
  > menu > menuitem > label:disabled { color: $insensitive_fg_color; }
}

// /*******************
//  * Firefox Quantum *
//  *******************/

#MozillaGtkWidget.background {

  // blend with weird toolbar backgrounds
  background-color: $bg_color;

  // FIXME: resetting child elements background is not fully functional yet
  // because WidgetStyleCache keeps holding initial background-color.
  // the stem of this incorrect colouring seems to be caused by their
  // gdk_rgba to ns_rgba conversion. I don't think theme's fault.
  .background,
  frame,
  separator,
  scrolledwindow { background-color: $bg_color; }

  headerbar.titlebar { // >= nightly 60.0a1(2018-02-02)
    // FIXME: no backdrop state, no maximized state, bullshit...
	padding-left: 10px;
    padding-right: 10px;
    &.default-decoration { @extend %csd_circle_titlebutton; }
  }

  *:not(menuitem):hover, // exclude menuitem node
  *:focus,
  *:active,
  *:checked {
    &, button { color: $fg_color; } // enforce opaque foregrounds
  }

  > window.background > menu { // context-menus
    border: unset; // hide ugly double borders
    background-color: $base_color;

    // revert to standard separators
    > separator {
      padding: 0;
      border: none;
      background-color: $firefox_border;
    }
  }

  > widget {
    border { border-color: $firefox_border; }

    separator { background-color: $firefox_border; }

    // FIXME: this affected to popover widget as well,
    // so we can not set $lighter_bg_color to search-bar...
    > scrolledwindow > textview {
      background-color: if($variant == 'light', $base_color, lighten($base_color, 5%));

      text {
        background-color: transparent;
        color: if($variant =='light', #242424, #aaaaaa);
        &:selected,
        &:selected:focus,
        selection { @extend %selected_items; }
      }
    }
  }
}

 /***************
  * Chrome(ium) *
  ***************/
$chrome_borders_color: if($variant == 'light', rgba(black, 0.15), rgba(white, 0.15));

%circle_chrome {
  button.titlebutton {
    min-width: 23px;
    min-height: 23px;
    padding: 0 2px;
    color: transparent;
  }
}

%square_chrome {
  @extend %csd_circle_titlebutton;
}

window.background.chromium {
  // checked-tab & toolbar & button widgets
  background-color: $bg_color;
  color: $text_color;

  headerbar.titlebar {
    @extend %circle_chrome;

    button.toggle { // account-button (> 64.0.3282?)
      @include button(header-normal);
      &:hover { @include button(header-hover); }
      &:checked, &:active { @include button(header-active); }
    }

    // from nav_button_provider_gtk3.cc (> 62.0.3202?)
//    button.titlebutton { // title-buttons
//      // define global titlebutton class sizing
//      padding: 0;
//      color: transparent; // hide stock icons
//    }
  }

  // FIXME: not for actual button widgets but for toolbar's separators
  // crazy: src/+/master/chrome/browser/ui/libgtkui/gtk_ui.cc#891
  button { // for active-tab borders
    border-width: 1px;
    border-style: solid;
    border-color: $chrome_borders_color;
  }

  entry.chromium {
    // overrides standard borders
    border-image: none;
    border: 1px solid $chrome_borders_color;
  }

  // internal region of toolbar's entry widget
  > textview.view { background-color: $base_color; }
}

/****************
 * Libre-Office *
 ****************/

window.background {
// reserved area at the most-right side of GtkMenuBar
  > grid.horizontal > grid.horizontal {
    background-color: $header_bg;
    box-shadow: inset 0 -1px $borders_color;

    > button.flat.small-button { // 'close' button
      color: $header_fg;
      border: none;
      border-radius: 50px;

      &:hover { background-color: rgba($header_fg, 0.25); }
      &:active,
      &:checked { background-color: $selected_bg_color; color: $selected_fg_color; }
      &:disabled { color: rgba($header_fg, 0.6); }
    }
  }
}

window.background:not(.solid-csd) {
  // for 'Notebookbar' toolbar
  > notebook:not(.frame) {
    border: 0 none transparent; // unset borders
    background-color: $base_color;

    > stack {
      border: none;
      box-shadow: none;
    }
  }
}

 /***********
  *  Geary  *
  ***********/

%folder_frame_border { border-width: 0; }

%conversation_frame {
  > border { border: none; }

  treeview.view {
    background-color: $base_color;

    &:selected {
      &, &:focus {
        background-color: rgba($selected_bg_color, 0.15);
        color: $fg_color;
        &:dir(ltr) { box-shadow: inset 2px 0 $selected_bg_color; }
        &:dir(rtl) { box-shadow: inset -2px 0 $selected_bg_color; }
      }
    }
  }
}

%folder_frame {

  &:dir(ltr) { border: none; }
  &:dir(rtl) { border: none; }

  treeview.view.sidebar {

    &.cell { // = row height of placessidebar
//      padding-top: rem(4px);
//      padding-bottom: rem(4px);
    }
  }
}

.geary-titlebar-left {
  // remove unexpected "hardcoded" vertical separator
  separator { opacity: 0; }
}

// left-pane styling (legacy)
.sidebar.vertical > paned.sidebar-pane-separator {
  .conversation-frame { @extend %conversation_frame; }

  .folder-frame {
    > border { @extend %folder_frame_border; }

    > scrolledwindow { @extend %folder_frame; }
  }
}

// left-pane styling (current)
.sidebar.vertical > paned.geary-sidebar-pane-separator {
  .geary-conversation-frame { @extend %conversation_frame; }

  .geary-folder-frame {
    > border { @extend  %folder_frame_border; }

    > scrolledwindow { @extend %folder_frame; }
  }
}

// right-pane styling (current)
stack#conversation_viewer {
  scrolledwindow.geary-conversation-scroller > viewport.frame {
    border: none; // unset borders
  }
}

// Popover
popover.background {
  list.geary-folder-popover-list {
    row.activatable.geary-folder-popover-list-row {
      label {
        color: $fg_color;
        &:disabled { color: $insensitive_fg_color; }
      }
    }
  }
}

//
// gThumb
//
overlay.window-overlay {
  grid.horizontal {
    stack {
      paned.horizontal {
        stack {
          widget.view.frame,
          scrolledwindow.frame { // Removed ugly borders
            border-left: none;
            border-right: none;
          }
        }
      }
      .sidebar { border-bottom: 1px solid $borders_color; } // Add bottom border for sidebar
    }
  }
}


// /*********
//  * Tilix *
//  *********/

// in-line titlebars
widget > box.terminal-titlebar {
  padding: 0 6px;

  > button.flat.popup.toggle {
    border: none;
    border-radius: 0;
    padding-top: 0;
    padding-bottom: 0;
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  $selected_bg_color 0%,
                                  transparent 0%)
                                  0 0 0 / 0 0 0;

    &:dir(ltr) { padding-right: 6px; }
    &:dir(rtl) { padding-left: 6px; }

    &:hover {
      box-shadow: inset 0 -2px $selected_bg_color;
      background: none;
    }

    &:checked, &:active {
      border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                    $selected_bg_color 100%,
                                    transparent 0%)
                                    0 0 2 / 0 0 2px;
      background-color: transparent;
      color: $fg_color;
    }
  }

  > button.image-button { // 'plus' and 'close'
    &, &.toggle {
      margin: 2px 0;
      padding: 0;
      min-height: 24px;
      min-width: 24px;
      border-radius: 100px;
      -gtk-outline-radius: 100px;
    }
  }
}

list.tilix-session-sidebar {
  // use -image property instead
  background-image: image($dark_sidebar_bg);

  button.tilix-sidebar-close-button {
    min-height: 20px;
    min-width: 20px;
    padding: 0;
    border-radius: 100px;
    -gtk-outline-radius: 100px;
    background-color: $destructive_color;
    &, &:hover, &:active, &:checked { color: white; }

    &:hover { background-color: lighten($destructive_color, 10%); }

    &:active,
    &:checked { background-image: image(darken($destructive_color, 10%)); }
  }
}

 /**************
  * Vala-Panel *
  **************/

// That app does not have any position specific style-classes,
// so embed indicators at the bottom of tasklist buttons as default.
// Then that app looks quite weird in vertical layout at all.
window#ValaPanel.background { // solid-mode
  background-color: $panel_bg;
  color: $panel_fg;

  decoration { all: unset; } // unset all decorations

  widget.-vala-panel-background > separator { // separator applet
    background-color: $panel_bg;
  }
}

button.flat.-panel-button { // generic panel buttons
  border-radius: 0;
  color: $panel_fg;
  font-weight: 700;
  border: none;

  &:hover {
    color: $selected_fg_color;
    background-color: rgba($selected_fg_color, 0.1);
  }

  &:active { color: $selected_fg_color; }
  &:checked {
    background-color: transparent;
    color: $selected_fg_color;
    box-shadow: inset 0 -2px $selected_bg_color;
    &:hover {
      background-image: radial-gradient(circle farthest-corner at center,
                          rgba($panel_fg, 0) 100%,
                          transparent 0%),
                          image(rgba($panel_fg, 0));
    }
  }
  &:disabled { color: rgba($panel_fg, 0.5); }
}

button.flat.-panel-icon-button {
  @extend %budgie_icon_tasklist_button;

  &:hover {
    box-shadow: inset 0 -2px rgba($panel_fg, 0.4);
  }
  &:active,
  &:checked {
    box-shadow: inset 0 -2px $selected_bg_color;
  }
}

.unpinned button.flat.-panel-icon-button {
  border-radius: 0;

  &:hover { -gtk-icon-effect: highlight; }
  &:hover,
  &:active,
  &:checked {
    box-shadow: inset 0 -2px $selected_bg_color;
  }
}

.pinned button.flat.-panel-icon-button.running {
  border-radius: 0;

  > image {
    background-position: bottom center;
  }

  &:hover { -gtk-icon-effect: highlight; }
  &:hover,
  &:active,
  &:checked {
    box-shadow: inset 0 -2px $selected_bg_color;
  }
}

// menubar-style'ed app menu
menubar.-vala-panel-background > menuitem { // override global values
  padding: 0 4px;
  font-weight: 700;
}
